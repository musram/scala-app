package dao.generic

/**
  * Identifyable base for all Strong Entity Model types i.e. every Strong entity is expected to have a
  * primary key column with name "id"
  * @tparam PK Primary key type
  * @tparam E Actual case class EntityRow type
  */
trait EntityAutoInc[PK, E <: EntityAutoInc[PK, E]] extends Entity[PK] { self: E =>
  import shapeless._
  import tag.@@
  //------------------------------------------------------------------------
  // public
  //------------------------------------------------------------------------
  /**
    * Returns the entity with updated id as generated by the database
    * @param id The auto increment generated entity id
    * @return the entity with updated id as generated by the database
    */
  def copyWithNewId(id : PK)(implicit mkLens: MkFieldLens.Aux[E, Symbol @@ Witness.`"id"`.T, PK]) : E = {
    (lens[E] >> 'id).set(self)(id)
  }
}